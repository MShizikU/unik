import { ApigeeDevOnboardingIntegrationAuthType, AuthProviderType } from '../config';
export declare const ssoConfigSchema: {
    readonly type: "object";
    readonly additionalProperties: {
        readonly oneOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly type: "string";
                    readonly const: AuthProviderType.OIDC;
                };
                readonly title: {
                    readonly type: "string";
                };
                readonly configurationUrl: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly configuration: {
                    readonly type: "object";
                    readonly properties: {
                        readonly end_session_endpoint: {
                            readonly type: "string";
                        };
                        readonly token_endpoint: {
                            readonly type: "string";
                        };
                        readonly authorization_endpoint: {
                            readonly type: "string";
                        };
                        readonly jwks_uri: {
                            readonly type: "string";
                        };
                    };
                    readonly required: readonly ["token_endpoint", "authorization_endpoint"];
                    readonly additionalProperties: true;
                };
                readonly clientId: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly clientSecret: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly teamsClaimName: {
                    readonly type: "string";
                };
                readonly teamsClaimMap: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly defaultTeams: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly scopes: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly tokenExpirationTime: {
                    readonly type: "number";
                };
                readonly authorizationRequestCustomParams: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly tokenRequestCustomParams: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly audience: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly required: readonly ["type", "clientId", "clientSecret"];
            readonly oneOf: readonly [{
                readonly required: readonly ["configurationUrl"];
            }, {
                readonly required: readonly ["configuration"];
            }];
            readonly additionalProperties: false;
        }, {
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly type: "string";
                    readonly const: AuthProviderType.SAML2;
                };
                readonly title: {
                    readonly type: "string";
                };
                readonly issuerId: {
                    readonly type: "string";
                };
                readonly entityId: {
                    readonly type: "string";
                };
                readonly ssoUrl: {
                    readonly type: "string";
                };
                readonly x509PublicCert: {
                    readonly type: "string";
                };
                readonly teamsAttributeName: {
                    readonly type: "string";
                    readonly default: "https://redocly.com/sso/teams";
                };
                readonly teamsAttributeMap: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly defaultTeams: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly additionalProperties: false;
            readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly type: "string";
                    readonly const: AuthProviderType.BASIC;
                };
                readonly title: {
                    readonly type: "string";
                };
                readonly credentials: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly username: {
                                readonly type: "string";
                            };
                            readonly password: {
                                readonly type: "string";
                            };
                            readonly passwordHash: {
                                readonly type: "string";
                            };
                            readonly teams: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly required: readonly ["username"];
                        readonly additionalProperties: false;
                    };
                };
            };
            readonly required: readonly ["type", "credentials"];
            readonly additionalProperties: false;
        }];
        readonly discriminator: {
            readonly propertyName: "type";
        };
    };
};
export declare const apiConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly root: {
            readonly type: "string";
        };
        readonly rbac: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly theme: {
            readonly type: "object";
            readonly properties: {
                readonly openapi: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
            };
            readonly additionalProperties: false;
        };
        readonly title: {
            readonly type: "string";
        };
        readonly metadata: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
    };
    readonly additionalProperties: true;
    readonly required: readonly ["root"];
};
export declare const redoclyConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly licenseKey: {
            readonly type: "string";
        };
        readonly theme: {
            readonly type: "object";
            readonly default: {};
        };
        readonly redirects: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly properties: {
                    readonly to: {
                        readonly type: "string";
                    };
                    readonly type: {
                        readonly type: "number";
                        readonly default: 301;
                    };
                };
                readonly required: readonly ["to"];
                readonly additionalProperties: false;
            };
            readonly default: {};
        };
        readonly seo: {
            readonly type: "object";
            readonly properties: {
                readonly title: {
                    readonly type: "string";
                };
                readonly description: {
                    readonly type: "string";
                };
                readonly siteUrl: {
                    readonly type: "string";
                };
                readonly image: {
                    readonly type: "string";
                };
                readonly keywords: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly lang: {
                    readonly type: "string";
                };
                readonly jsonLd: {
                    readonly type: "object";
                };
                readonly meta: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly content: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["name", "content"];
                        readonly additionalProperties: false;
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly rbac: {
            readonly type: "object";
            readonly properties: {
                readonly defaults: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
            };
            readonly additionalProperties: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
        };
        readonly responseHeaders: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly name: {
                            readonly type: "string";
                        };
                        readonly value: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["name", "value"];
                };
            };
        };
        readonly mockServer: {
            readonly type: "object";
            readonly properties: {
                readonly off: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly position: {
                    readonly type: "string";
                    readonly enum: readonly ["first", "last", "replace", "off"];
                    readonly default: "first";
                };
                readonly strictExamples: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly errorIfForcedExampleNotFound: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly description: {
                    readonly type: "string";
                };
            };
        };
        readonly apis: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly properties: {
                    readonly root: {
                        readonly type: "string";
                    };
                    readonly rbac: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly theme: {
                        readonly type: "object";
                        readonly properties: {
                            readonly openapi: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                        };
                        readonly additionalProperties: false;
                    };
                    readonly title: {
                        readonly type: "string";
                    };
                    readonly metadata: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly additionalProperties: true;
                readonly required: readonly ["root"];
            };
        };
        readonly sso: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.OIDC;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly configurationUrl: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly configuration: {
                            readonly type: "object";
                            readonly properties: {
                                readonly end_session_endpoint: {
                                    readonly type: "string";
                                };
                                readonly token_endpoint: {
                                    readonly type: "string";
                                };
                                readonly authorization_endpoint: {
                                    readonly type: "string";
                                };
                                readonly jwks_uri: {
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["token_endpoint", "authorization_endpoint"];
                            readonly additionalProperties: true;
                        };
                        readonly clientId: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly clientSecret: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly teamsClaimName: {
                            readonly type: "string";
                        };
                        readonly teamsClaimMap: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly defaultTeams: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly scopes: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly tokenExpirationTime: {
                            readonly type: "number";
                        };
                        readonly authorizationRequestCustomParams: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly tokenRequestCustomParams: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly audience: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly required: readonly ["type", "clientId", "clientSecret"];
                    readonly oneOf: readonly [{
                        readonly required: readonly ["configurationUrl"];
                    }, {
                        readonly required: readonly ["configuration"];
                    }];
                    readonly additionalProperties: false;
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.SAML2;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly issuerId: {
                            readonly type: "string";
                        };
                        readonly entityId: {
                            readonly type: "string";
                        };
                        readonly ssoUrl: {
                            readonly type: "string";
                        };
                        readonly x509PublicCert: {
                            readonly type: "string";
                        };
                        readonly teamsAttributeName: {
                            readonly type: "string";
                            readonly default: "https://redocly.com/sso/teams";
                        };
                        readonly teamsAttributeMap: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly defaultTeams: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.BASIC;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly credentials: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly username: {
                                        readonly type: "string";
                                    };
                                    readonly password: {
                                        readonly type: "string";
                                    };
                                    readonly passwordHash: {
                                        readonly type: "string";
                                    };
                                    readonly teams: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly required: readonly ["username"];
                                readonly additionalProperties: false;
                            };
                        };
                    };
                    readonly required: readonly ["type", "credentials"];
                    readonly additionalProperties: false;
                }];
                readonly discriminator: {
                    readonly propertyName: "type";
                };
            };
        };
        readonly developerOnboarding: {
            readonly type: "object";
            readonly required: readonly ["adapters"];
            readonly additionalProperties: false;
            readonly properties: {
                readonly adapters: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly oneOf: readonly [{
                            readonly type: "object";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "APIGEE_X";
                                };
                                readonly apiUrl: {
                                    readonly type: "string";
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly organizationName: {
                                    readonly type: "string";
                                };
                                readonly ignoreApiProducts: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                            };
                                            readonly tokenEndpoint: {
                                                readonly type: "string";
                                            };
                                            readonly clientId: {
                                                readonly type: "string";
                                            };
                                            readonly clientSecret: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                            };
                                            readonly serviceAccountEmail: {
                                                readonly type: "string";
                                            };
                                            readonly serviceAccountPrivateKey: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                    }];
                                    readonly discriminator: {
                                        readonly propertyName: "type";
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "organizationName", "auth"];
                        }, {
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "APIGEE_EDGE";
                                };
                                readonly apiUrl: {
                                    readonly type: "string";
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly organizationName: {
                                    readonly type: "string";
                                };
                                readonly ignoreApiProducts: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                            };
                                            readonly tokenEndpoint: {
                                                readonly type: "string";
                                            };
                                            readonly clientId: {
                                                readonly type: "string";
                                            };
                                            readonly clientSecret: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                            };
                                            readonly serviceAccountEmail: {
                                                readonly type: "string";
                                            };
                                            readonly serviceAccountPrivateKey: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                    }];
                                    readonly discriminator: {
                                        readonly propertyName: "type";
                                    };
                                };
                            };
                            readonly type: "object";
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "organizationName", "auth"];
                        }, {
                            readonly type: "object";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "GRAVITEE";
                                };
                                readonly apiBaseUrl: {
                                    readonly type: "string";
                                };
                                readonly env: {
                                    readonly type: "string";
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly static: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "apiBaseUrl"];
                        }];
                        readonly discriminator: {
                            readonly propertyName: "type";
                        };
                    };
                };
            };
        };
        readonly i18n: {
            readonly type: "object";
            readonly properties: {
                readonly defaultLocale: {
                    readonly type: "string";
                };
                readonly locales: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["code"];
                    };
                };
            };
            readonly additionalProperties: false;
            readonly required: readonly ["defaultLocale", "locales"];
        };
        readonly metadata: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
    };
    readonly default: {};
    readonly additionalProperties: true;
};
export declare const environmentSchema: {
    readonly oneOf: readonly [{
        readonly additionalProperties: false;
        readonly type: "object";
        readonly properties: {
            readonly licenseKey: {
                readonly type: "string";
            };
            readonly theme: {
                readonly type: "object";
                readonly default: {};
            };
            readonly redirects: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "object";
                    readonly properties: {
                        readonly to: {
                            readonly type: "string";
                        };
                        readonly type: {
                            readonly type: "number";
                            readonly default: 301;
                        };
                    };
                    readonly required: readonly ["to"];
                    readonly additionalProperties: false;
                };
                readonly default: {};
            };
            readonly seo: {
                readonly type: "object";
                readonly properties: {
                    readonly title: {
                        readonly type: "string";
                    };
                    readonly description: {
                        readonly type: "string";
                    };
                    readonly siteUrl: {
                        readonly type: "string";
                    };
                    readonly image: {
                        readonly type: "string";
                    };
                    readonly keywords: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                        };
                    };
                    readonly lang: {
                        readonly type: "string";
                    };
                    readonly jsonLd: {
                        readonly type: "object";
                    };
                    readonly meta: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly name: {
                                    readonly type: "string";
                                };
                                readonly content: {
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["name", "content"];
                            readonly additionalProperties: false;
                        };
                    };
                };
                readonly additionalProperties: false;
            };
            readonly rbac: {
                readonly type: "object";
                readonly properties: {
                    readonly defaults: {
                        readonly type: "object";
                        readonly additionalProperties: {
                            readonly type: "string";
                        };
                    };
                };
                readonly additionalProperties: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
            };
            readonly responseHeaders: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly value: {
                                readonly type: "string";
                            };
                        };
                        readonly additionalProperties: false;
                        readonly required: readonly ["name", "value"];
                    };
                };
            };
            readonly mockServer: {
                readonly type: "object";
                readonly properties: {
                    readonly off: {
                        readonly type: "boolean";
                        readonly default: false;
                    };
                    readonly position: {
                        readonly type: "string";
                        readonly enum: readonly ["first", "last", "replace", "off"];
                        readonly default: "first";
                    };
                    readonly strictExamples: {
                        readonly type: "boolean";
                        readonly default: false;
                    };
                    readonly errorIfForcedExampleNotFound: {
                        readonly type: "boolean";
                        readonly default: false;
                    };
                    readonly description: {
                        readonly type: "string";
                    };
                };
            };
            readonly apis: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "object";
                    readonly properties: {
                        readonly root: {
                            readonly type: "string";
                        };
                        readonly rbac: {
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                        readonly theme: {
                            readonly type: "object";
                            readonly properties: {
                                readonly openapi: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly metadata: {
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                    };
                    readonly additionalProperties: true;
                    readonly required: readonly ["root"];
                };
            };
            readonly sso: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly oneOf: readonly [{
                        readonly type: "object";
                        readonly properties: {
                            readonly type: {
                                readonly type: "string";
                                readonly const: AuthProviderType.OIDC;
                            };
                            readonly title: {
                                readonly type: "string";
                            };
                            readonly configurationUrl: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly configuration: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly end_session_endpoint: {
                                        readonly type: "string";
                                    };
                                    readonly token_endpoint: {
                                        readonly type: "string";
                                    };
                                    readonly authorization_endpoint: {
                                        readonly type: "string";
                                    };
                                    readonly jwks_uri: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["token_endpoint", "authorization_endpoint"];
                                readonly additionalProperties: true;
                            };
                            readonly clientId: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly clientSecret: {
                                readonly type: "string";
                                readonly minLength: 1;
                            };
                            readonly teamsClaimName: {
                                readonly type: "string";
                            };
                            readonly teamsClaimMap: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "string";
                                };
                            };
                            readonly defaultTeams: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly scopes: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                            readonly tokenExpirationTime: {
                                readonly type: "number";
                            };
                            readonly authorizationRequestCustomParams: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "string";
                                };
                            };
                            readonly tokenRequestCustomParams: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "string";
                                };
                            };
                            readonly audience: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly required: readonly ["type", "clientId", "clientSecret"];
                        readonly oneOf: readonly [{
                            readonly required: readonly ["configurationUrl"];
                        }, {
                            readonly required: readonly ["configuration"];
                        }];
                        readonly additionalProperties: false;
                    }, {
                        readonly type: "object";
                        readonly properties: {
                            readonly type: {
                                readonly type: "string";
                                readonly const: AuthProviderType.SAML2;
                            };
                            readonly title: {
                                readonly type: "string";
                            };
                            readonly issuerId: {
                                readonly type: "string";
                            };
                            readonly entityId: {
                                readonly type: "string";
                            };
                            readonly ssoUrl: {
                                readonly type: "string";
                            };
                            readonly x509PublicCert: {
                                readonly type: "string";
                            };
                            readonly teamsAttributeName: {
                                readonly type: "string";
                                readonly default: "https://redocly.com/sso/teams";
                            };
                            readonly teamsAttributeMap: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "string";
                                };
                            };
                            readonly defaultTeams: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly additionalProperties: false;
                        readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
                    }, {
                        readonly type: "object";
                        readonly properties: {
                            readonly type: {
                                readonly type: "string";
                                readonly const: AuthProviderType.BASIC;
                            };
                            readonly title: {
                                readonly type: "string";
                            };
                            readonly credentials: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly username: {
                                            readonly type: "string";
                                        };
                                        readonly password: {
                                            readonly type: "string";
                                        };
                                        readonly passwordHash: {
                                            readonly type: "string";
                                        };
                                        readonly teams: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly required: readonly ["username"];
                                    readonly additionalProperties: false;
                                };
                            };
                        };
                        readonly required: readonly ["type", "credentials"];
                        readonly additionalProperties: false;
                    }];
                    readonly discriminator: {
                        readonly propertyName: "type";
                    };
                };
            };
            readonly developerOnboarding: {
                readonly type: "object";
                readonly required: readonly ["adapters"];
                readonly additionalProperties: false;
                readonly properties: {
                    readonly adapters: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly oneOf: readonly [{
                                readonly type: "object";
                                readonly properties: {
                                    readonly type: {
                                        readonly type: "string";
                                        readonly const: "APIGEE_X";
                                    };
                                    readonly apiUrl: {
                                        readonly type: "string";
                                    };
                                    readonly stage: {
                                        readonly type: "string";
                                        readonly default: "non-production";
                                    };
                                    readonly organizationName: {
                                        readonly type: "string";
                                    };
                                    readonly ignoreApiProducts: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly allowApiProductsOutsideCatalog: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly auth: {
                                        readonly type: "object";
                                        readonly oneOf: readonly [{
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                    readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                                };
                                                readonly tokenEndpoint: {
                                                    readonly type: "string";
                                                };
                                                readonly clientId: {
                                                    readonly type: "string";
                                                };
                                                readonly clientSecret: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                            readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                    readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                                };
                                                readonly serviceAccountEmail: {
                                                    readonly type: "string";
                                                };
                                                readonly serviceAccountPrivateKey: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                            readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                        }];
                                        readonly discriminator: {
                                            readonly propertyName: "type";
                                        };
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly required: readonly ["type", "organizationName", "auth"];
                            }, {
                                readonly properties: {
                                    readonly type: {
                                        readonly type: "string";
                                        readonly const: "APIGEE_EDGE";
                                    };
                                    readonly apiUrl: {
                                        readonly type: "string";
                                    };
                                    readonly stage: {
                                        readonly type: "string";
                                        readonly default: "non-production";
                                    };
                                    readonly organizationName: {
                                        readonly type: "string";
                                    };
                                    readonly ignoreApiProducts: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly allowApiProductsOutsideCatalog: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly auth: {
                                        readonly type: "object";
                                        readonly oneOf: readonly [{
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                    readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                                };
                                                readonly tokenEndpoint: {
                                                    readonly type: "string";
                                                };
                                                readonly clientId: {
                                                    readonly type: "string";
                                                };
                                                readonly clientSecret: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                            readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                    readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                                };
                                                readonly serviceAccountEmail: {
                                                    readonly type: "string";
                                                };
                                                readonly serviceAccountPrivateKey: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                            readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                        }];
                                        readonly discriminator: {
                                            readonly propertyName: "type";
                                        };
                                    };
                                };
                                readonly type: "object";
                                readonly additionalProperties: false;
                                readonly required: readonly ["type", "organizationName", "auth"];
                            }, {
                                readonly type: "object";
                                readonly properties: {
                                    readonly type: {
                                        readonly type: "string";
                                        readonly const: "GRAVITEE";
                                    };
                                    readonly apiBaseUrl: {
                                        readonly type: "string";
                                    };
                                    readonly env: {
                                        readonly type: "string";
                                    };
                                    readonly allowApiProductsOutsideCatalog: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly stage: {
                                        readonly type: "string";
                                        readonly default: "non-production";
                                    };
                                    readonly auth: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly static: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly required: readonly ["type", "apiBaseUrl"];
                            }];
                            readonly discriminator: {
                                readonly propertyName: "type";
                            };
                        };
                    };
                };
            };
            readonly i18n: {
                readonly type: "object";
                readonly properties: {
                    readonly defaultLocale: {
                        readonly type: "string";
                    };
                    readonly locales: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "object";
                            readonly properties: {
                                readonly code: {
                                    readonly type: "string";
                                };
                                readonly name: {
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["code"];
                        };
                    };
                };
                readonly additionalProperties: false;
                readonly required: readonly ["defaultLocale", "locales"];
            };
            readonly metadata: {
                readonly type: "object";
                readonly additionalProperties: true;
            };
        };
        readonly default: {};
    }, {
        readonly type: "object";
        readonly properties: {
            readonly $ref: {
                readonly type: "string";
            };
        };
        readonly required: readonly ["$ref"];
        readonly additionalProperties: false;
    }];
};
export declare const rootRedoclyConfigSchema: {
    readonly properties: {
        readonly env: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly oneOf: readonly [{
                    readonly additionalProperties: false;
                    readonly type: "object";
                    readonly properties: {
                        readonly licenseKey: {
                            readonly type: "string";
                        };
                        readonly theme: {
                            readonly type: "object";
                            readonly default: {};
                        };
                        readonly redirects: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly to: {
                                        readonly type: "string";
                                    };
                                    readonly type: {
                                        readonly type: "number";
                                        readonly default: 301;
                                    };
                                };
                                readonly required: readonly ["to"];
                                readonly additionalProperties: false;
                            };
                            readonly default: {};
                        };
                        readonly seo: {
                            readonly type: "object";
                            readonly properties: {
                                readonly title: {
                                    readonly type: "string";
                                };
                                readonly description: {
                                    readonly type: "string";
                                };
                                readonly siteUrl: {
                                    readonly type: "string";
                                };
                                readonly image: {
                                    readonly type: "string";
                                };
                                readonly keywords: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly lang: {
                                    readonly type: "string";
                                };
                                readonly jsonLd: {
                                    readonly type: "object";
                                };
                                readonly meta: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly content: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["name", "content"];
                                        readonly additionalProperties: false;
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly rbac: {
                            readonly type: "object";
                            readonly properties: {
                                readonly defaults: {
                                    readonly type: "object";
                                    readonly additionalProperties: {
                                        readonly type: "string";
                                    };
                                };
                            };
                            readonly additionalProperties: {
                                readonly type: "object";
                                readonly additionalProperties: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly responseHeaders: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly name: {
                                            readonly type: "string";
                                        };
                                        readonly value: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                    readonly required: readonly ["name", "value"];
                                };
                            };
                        };
                        readonly mockServer: {
                            readonly type: "object";
                            readonly properties: {
                                readonly off: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly position: {
                                    readonly type: "string";
                                    readonly enum: readonly ["first", "last", "replace", "off"];
                                    readonly default: "first";
                                };
                                readonly strictExamples: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly errorIfForcedExampleNotFound: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly description: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly apis: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly root: {
                                        readonly type: "string";
                                    };
                                    readonly rbac: {
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly theme: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly openapi: {
                                                readonly type: "object";
                                                readonly additionalProperties: true;
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly title: {
                                        readonly type: "string";
                                    };
                                    readonly metadata: {
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                };
                                readonly additionalProperties: true;
                                readonly required: readonly ["root"];
                            };
                        };
                        readonly sso: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly oneOf: readonly [{
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                            readonly const: AuthProviderType.OIDC;
                                        };
                                        readonly title: {
                                            readonly type: "string";
                                        };
                                        readonly configurationUrl: {
                                            readonly type: "string";
                                            readonly minLength: 1;
                                        };
                                        readonly configuration: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly end_session_endpoint: {
                                                    readonly type: "string";
                                                };
                                                readonly token_endpoint: {
                                                    readonly type: "string";
                                                };
                                                readonly authorization_endpoint: {
                                                    readonly type: "string";
                                                };
                                                readonly jwks_uri: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["token_endpoint", "authorization_endpoint"];
                                            readonly additionalProperties: true;
                                        };
                                        readonly clientId: {
                                            readonly type: "string";
                                            readonly minLength: 1;
                                        };
                                        readonly clientSecret: {
                                            readonly type: "string";
                                            readonly minLength: 1;
                                        };
                                        readonly teamsClaimName: {
                                            readonly type: "string";
                                        };
                                        readonly teamsClaimMap: {
                                            readonly type: "object";
                                            readonly additionalProperties: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly defaultTeams: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly scopes: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly tokenExpirationTime: {
                                            readonly type: "number";
                                        };
                                        readonly authorizationRequestCustomParams: {
                                            readonly type: "object";
                                            readonly additionalProperties: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly tokenRequestCustomParams: {
                                            readonly type: "object";
                                            readonly additionalProperties: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly audience: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly required: readonly ["type", "clientId", "clientSecret"];
                                    readonly oneOf: readonly [{
                                        readonly required: readonly ["configurationUrl"];
                                    }, {
                                        readonly required: readonly ["configuration"];
                                    }];
                                    readonly additionalProperties: false;
                                }, {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                            readonly const: AuthProviderType.SAML2;
                                        };
                                        readonly title: {
                                            readonly type: "string";
                                        };
                                        readonly issuerId: {
                                            readonly type: "string";
                                        };
                                        readonly entityId: {
                                            readonly type: "string";
                                        };
                                        readonly ssoUrl: {
                                            readonly type: "string";
                                        };
                                        readonly x509PublicCert: {
                                            readonly type: "string";
                                        };
                                        readonly teamsAttributeName: {
                                            readonly type: "string";
                                            readonly default: "https://redocly.com/sso/teams";
                                        };
                                        readonly teamsAttributeMap: {
                                            readonly type: "object";
                                            readonly additionalProperties: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly defaultTeams: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                    readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
                                }, {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                            readonly const: AuthProviderType.BASIC;
                                        };
                                        readonly title: {
                                            readonly type: "string";
                                        };
                                        readonly credentials: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly username: {
                                                        readonly type: "string";
                                                    };
                                                    readonly password: {
                                                        readonly type: "string";
                                                    };
                                                    readonly passwordHash: {
                                                        readonly type: "string";
                                                    };
                                                    readonly teams: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly required: readonly ["username"];
                                                readonly additionalProperties: false;
                                            };
                                        };
                                    };
                                    readonly required: readonly ["type", "credentials"];
                                    readonly additionalProperties: false;
                                }];
                                readonly discriminator: {
                                    readonly propertyName: "type";
                                };
                            };
                        };
                        readonly developerOnboarding: {
                            readonly type: "object";
                            readonly required: readonly ["adapters"];
                            readonly additionalProperties: false;
                            readonly properties: {
                                readonly adapters: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly oneOf: readonly [{
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                    readonly const: "APIGEE_X";
                                                };
                                                readonly apiUrl: {
                                                    readonly type: "string";
                                                };
                                                readonly stage: {
                                                    readonly type: "string";
                                                    readonly default: "non-production";
                                                };
                                                readonly organizationName: {
                                                    readonly type: "string";
                                                };
                                                readonly ignoreApiProducts: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly allowApiProductsOutsideCatalog: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly auth: {
                                                    readonly type: "object";
                                                    readonly oneOf: readonly [{
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly type: {
                                                                readonly type: "string";
                                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                                            };
                                                            readonly tokenEndpoint: {
                                                                readonly type: "string";
                                                            };
                                                            readonly clientId: {
                                                                readonly type: "string";
                                                            };
                                                            readonly clientSecret: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                        readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                                    }, {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly type: {
                                                                readonly type: "string";
                                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                                            };
                                                            readonly serviceAccountEmail: {
                                                                readonly type: "string";
                                                            };
                                                            readonly serviceAccountPrivateKey: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                        readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                                    }];
                                                    readonly discriminator: {
                                                        readonly propertyName: "type";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                            readonly required: readonly ["type", "organizationName", "auth"];
                                        }, {
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                    readonly const: "APIGEE_EDGE";
                                                };
                                                readonly apiUrl: {
                                                    readonly type: "string";
                                                };
                                                readonly stage: {
                                                    readonly type: "string";
                                                    readonly default: "non-production";
                                                };
                                                readonly organizationName: {
                                                    readonly type: "string";
                                                };
                                                readonly ignoreApiProducts: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly allowApiProductsOutsideCatalog: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly auth: {
                                                    readonly type: "object";
                                                    readonly oneOf: readonly [{
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly type: {
                                                                readonly type: "string";
                                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                                            };
                                                            readonly tokenEndpoint: {
                                                                readonly type: "string";
                                                            };
                                                            readonly clientId: {
                                                                readonly type: "string";
                                                            };
                                                            readonly clientSecret: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                        readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                                    }, {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly type: {
                                                                readonly type: "string";
                                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                                            };
                                                            readonly serviceAccountEmail: {
                                                                readonly type: "string";
                                                            };
                                                            readonly serviceAccountPrivateKey: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                        readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                                    }];
                                                    readonly discriminator: {
                                                        readonly propertyName: "type";
                                                    };
                                                };
                                            };
                                            readonly type: "object";
                                            readonly additionalProperties: false;
                                            readonly required: readonly ["type", "organizationName", "auth"];
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                    readonly const: "GRAVITEE";
                                                };
                                                readonly apiBaseUrl: {
                                                    readonly type: "string";
                                                };
                                                readonly env: {
                                                    readonly type: "string";
                                                };
                                                readonly allowApiProductsOutsideCatalog: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly stage: {
                                                    readonly type: "string";
                                                    readonly default: "non-production";
                                                };
                                                readonly auth: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly static: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                            readonly required: readonly ["type", "apiBaseUrl"];
                                        }];
                                        readonly discriminator: {
                                            readonly propertyName: "type";
                                        };
                                    };
                                };
                            };
                        };
                        readonly i18n: {
                            readonly type: "object";
                            readonly properties: {
                                readonly defaultLocale: {
                                    readonly type: "string";
                                };
                                readonly locales: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly code: {
                                                readonly type: "string";
                                            };
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly required: readonly ["code"];
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["defaultLocale", "locales"];
                        };
                        readonly metadata: {
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                    };
                    readonly default: {};
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly $ref: {
                            readonly type: "string";
                        };
                    };
                    readonly required: readonly ["$ref"];
                    readonly additionalProperties: false;
                }];
            };
        };
        readonly licenseKey: {
            readonly type: "string";
        };
        readonly theme: {
            readonly type: "object";
            readonly default: {};
        };
        readonly redirects: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly properties: {
                    readonly to: {
                        readonly type: "string";
                    };
                    readonly type: {
                        readonly type: "number";
                        readonly default: 301;
                    };
                };
                readonly required: readonly ["to"];
                readonly additionalProperties: false;
            };
            readonly default: {};
        };
        readonly seo: {
            readonly type: "object";
            readonly properties: {
                readonly title: {
                    readonly type: "string";
                };
                readonly description: {
                    readonly type: "string";
                };
                readonly siteUrl: {
                    readonly type: "string";
                };
                readonly image: {
                    readonly type: "string";
                };
                readonly keywords: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly lang: {
                    readonly type: "string";
                };
                readonly jsonLd: {
                    readonly type: "object";
                };
                readonly meta: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly content: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["name", "content"];
                        readonly additionalProperties: false;
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly rbac: {
            readonly type: "object";
            readonly properties: {
                readonly defaults: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
            };
            readonly additionalProperties: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
        };
        readonly responseHeaders: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly name: {
                            readonly type: "string";
                        };
                        readonly value: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["name", "value"];
                };
            };
        };
        readonly mockServer: {
            readonly type: "object";
            readonly properties: {
                readonly off: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly position: {
                    readonly type: "string";
                    readonly enum: readonly ["first", "last", "replace", "off"];
                    readonly default: "first";
                };
                readonly strictExamples: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly errorIfForcedExampleNotFound: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly description: {
                    readonly type: "string";
                };
            };
        };
        readonly apis: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly properties: {
                    readonly root: {
                        readonly type: "string";
                    };
                    readonly rbac: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly theme: {
                        readonly type: "object";
                        readonly properties: {
                            readonly openapi: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                        };
                        readonly additionalProperties: false;
                    };
                    readonly title: {
                        readonly type: "string";
                    };
                    readonly metadata: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly additionalProperties: true;
                readonly required: readonly ["root"];
            };
        };
        readonly sso: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.OIDC;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly configurationUrl: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly configuration: {
                            readonly type: "object";
                            readonly properties: {
                                readonly end_session_endpoint: {
                                    readonly type: "string";
                                };
                                readonly token_endpoint: {
                                    readonly type: "string";
                                };
                                readonly authorization_endpoint: {
                                    readonly type: "string";
                                };
                                readonly jwks_uri: {
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["token_endpoint", "authorization_endpoint"];
                            readonly additionalProperties: true;
                        };
                        readonly clientId: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly clientSecret: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly teamsClaimName: {
                            readonly type: "string";
                        };
                        readonly teamsClaimMap: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly defaultTeams: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly scopes: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly tokenExpirationTime: {
                            readonly type: "number";
                        };
                        readonly authorizationRequestCustomParams: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly tokenRequestCustomParams: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly audience: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly required: readonly ["type", "clientId", "clientSecret"];
                    readonly oneOf: readonly [{
                        readonly required: readonly ["configurationUrl"];
                    }, {
                        readonly required: readonly ["configuration"];
                    }];
                    readonly additionalProperties: false;
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.SAML2;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly issuerId: {
                            readonly type: "string";
                        };
                        readonly entityId: {
                            readonly type: "string";
                        };
                        readonly ssoUrl: {
                            readonly type: "string";
                        };
                        readonly x509PublicCert: {
                            readonly type: "string";
                        };
                        readonly teamsAttributeName: {
                            readonly type: "string";
                            readonly default: "https://redocly.com/sso/teams";
                        };
                        readonly teamsAttributeMap: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly defaultTeams: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.BASIC;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly credentials: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly username: {
                                        readonly type: "string";
                                    };
                                    readonly password: {
                                        readonly type: "string";
                                    };
                                    readonly passwordHash: {
                                        readonly type: "string";
                                    };
                                    readonly teams: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly required: readonly ["username"];
                                readonly additionalProperties: false;
                            };
                        };
                    };
                    readonly required: readonly ["type", "credentials"];
                    readonly additionalProperties: false;
                }];
                readonly discriminator: {
                    readonly propertyName: "type";
                };
            };
        };
        readonly developerOnboarding: {
            readonly type: "object";
            readonly required: readonly ["adapters"];
            readonly additionalProperties: false;
            readonly properties: {
                readonly adapters: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly oneOf: readonly [{
                            readonly type: "object";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "APIGEE_X";
                                };
                                readonly apiUrl: {
                                    readonly type: "string";
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly organizationName: {
                                    readonly type: "string";
                                };
                                readonly ignoreApiProducts: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                            };
                                            readonly tokenEndpoint: {
                                                readonly type: "string";
                                            };
                                            readonly clientId: {
                                                readonly type: "string";
                                            };
                                            readonly clientSecret: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                            };
                                            readonly serviceAccountEmail: {
                                                readonly type: "string";
                                            };
                                            readonly serviceAccountPrivateKey: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                    }];
                                    readonly discriminator: {
                                        readonly propertyName: "type";
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "organizationName", "auth"];
                        }, {
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "APIGEE_EDGE";
                                };
                                readonly apiUrl: {
                                    readonly type: "string";
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly organizationName: {
                                    readonly type: "string";
                                };
                                readonly ignoreApiProducts: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                            };
                                            readonly tokenEndpoint: {
                                                readonly type: "string";
                                            };
                                            readonly clientId: {
                                                readonly type: "string";
                                            };
                                            readonly clientSecret: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                            };
                                            readonly serviceAccountEmail: {
                                                readonly type: "string";
                                            };
                                            readonly serviceAccountPrivateKey: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                    }];
                                    readonly discriminator: {
                                        readonly propertyName: "type";
                                    };
                                };
                            };
                            readonly type: "object";
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "organizationName", "auth"];
                        }, {
                            readonly type: "object";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "GRAVITEE";
                                };
                                readonly apiBaseUrl: {
                                    readonly type: "string";
                                };
                                readonly env: {
                                    readonly type: "string";
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly static: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "apiBaseUrl"];
                        }];
                        readonly discriminator: {
                            readonly propertyName: "type";
                        };
                    };
                };
            };
        };
        readonly i18n: {
            readonly type: "object";
            readonly properties: {
                readonly defaultLocale: {
                    readonly type: "string";
                };
                readonly locales: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["code"];
                    };
                };
            };
            readonly additionalProperties: false;
            readonly required: readonly ["defaultLocale", "locales"];
        };
        readonly metadata: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
    };
    readonly default: {};
    readonly required: readonly ["redirects"];
    readonly type: "object";
    readonly additionalProperties: true;
};
